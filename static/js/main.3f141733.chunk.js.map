{"version":3,"sources":["components/Header.js","components/DrinkDrop.js","components/SizeDrop.js","components/ExtraDrop.js","components/AddToCart.js","components/Order.js","components/AddOrder.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","orderInProgress","className","role","aria-label","onClick","handleRandName","noOrders","randName","hideCart","cartPress","DrinkDrop","_this$props","this","list","toggleItem","displayDrink","map","item","key","style","id","selected","React","Component","SizeDrop","displaySize","size","ExtraDrop","displayExtras","AddToCart","handleAddtoCart","cart","extrasCart","_this","coffees","coffee","push","sizes","extras","extra","handleCart","index","newOrderDisplay","resetMenus","_this2","displayCart","Order","state","toggleSelected","temp","setState","prevState","obj","Object","defineProperty","name","currentOrder","components_DrinkDrop","title","components_SizeDrop","components_ExtraDrop","components_AddToCart","AddOrder","orderInput","createRef","handleSubmit","e","preventDefault","lowerCaseTextInput","current","value","toLowerCase","inputCapitalized","charAt","toUpperCase","slice","addOrder","currentTarget","reset","displayAddOrder","onSubmit","type","ref","placeholder","Cart","join","removeOrder","drink","App","orders","handleCartPress","handleAddOrder","newOrder","prevOrderID","concat","handleAddOrderDisplay","array1","array2","customer","console","log","names","randIndex","Math","floor","random","length","handleRemoveOrder","filter","p","components_Header","order","components_Order","toString","components_AddOrder","components_Cart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f141733.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n\n    return (\n      <header>\n      {props.orderInProgress ? null:\n      <span className = 'refresh-randName' role ='img' aria-label = 'refresh' onClick = {() => {props.handleRandName()}}>⟳</span>}\n        <div className = 'main-header'>\n          <h1>\n            <span role='img' aria-label=\"coffee\">☕</span>\n              coffee_drop\n            <span role='img' aria-label=\"coffee\">☕</span> </h1>\n             {props.noOrders ? null:<p>It is {props.randName}'s turn to get the brews in</p>}\n        </div>\n        {props.orderInProgress ? null :\n        <div className = 'open-cart-button'>\n       {props.hideCart ? <span role='img' aria-label=\"shopping-cart\" onClick = {()=>{props.cartPress()}}>🛒</span>\n                       : <span role='img' aria-label=\"return-arrow\" onClick = {()=>{props.cartPress()}}>↻</span>}\n        </div>}\n      </header>\n    );\n  }\n\nexport default Header;","import React from 'react'\n\nclass DrinkDrop extends React.Component {\n\nrender(){\n    const{list,toggleItem,displayDrink} = this.props\n    return(\n        displayDrink? \n\n        <div className = \"drink menu-wrapper\">\n\n        <ul className='menu-list'>\n           {list.map((item)=>(\n               <li className = \"menu-item\" key = {item.style} onClick ={()=> toggleItem(item.id,item.key)}>{item.style}{item.selected && '✔'}</li>\n           ))} \n        </ul>\n        </div>\n\n        : null\n    )\n}\n}\n\nexport default DrinkDrop;","import React from 'react'\n\nclass SizeDrop extends React.Component {\n\nrender(){\n    const{list,toggleItem,displaySize} =this.props\n    return(\n        displaySize ?\n        <div className = \"size menu-wrapper\">\n        <ul className='size menu-list'>\n           {list.map((item)=>(\n               <li className = \"menu-item\" key = {item.size} onClick ={()=> toggleItem(item.id,item.key)}>{item.size}{item.selected && '✔'}</li>\n           ))} \n        </ul>\n        </div>\n        : null\n    )\n}\n}\n\nexport default SizeDrop","import React from 'react'\n\nclass ExtraDrop extends React.Component {\n\nrender(){\n    const{list,toggleItem,displayExtras} =this.props\n    return(\n        displayExtras ?\n        <div className = \"extra menu-wrapper\">\n        <ul className='menu-list'>\n           {list.map((item)=>(\n               <li className = \"menu-item\" key = {item.style} onClick ={()=> toggleItem(item.id,item.key)}>{item.style}{item.selected && '✔'}</li>\n           ))} \n        </ul>\n        </div>\n        :null\n    )\n}\n}\n\nexport default ExtraDrop;","import React from 'react'\n\nclass AddToCart extends React.Component {\n\n        handleAddtoCart = () => {\n            let cart = []\n            let extrasCart = []\n\n            this.props.coffees.map((coffee) => {\n                if (coffee.selected === true) {\n                    cart.push(coffee.style)\n                }\n                return cart;\n            })\n\n            this.props.sizes.map((size) => {\n                if (size.selected === true) {\n                    cart.push(size.size)\n                }\n                return cart;\n            })\n\n            this.props.extras.map((extra) => {\n                if (extra.selected === true) {\n                    extrasCart.push(extra.style)\n                }\n                return extrasCart\n            })\n            // console.log(cart)\n            // console.log(extrasCart)\n            // console.log('ID:' + this.props.id)\n            // console.log('index:' +this.props.index)\n            this.props.handleCart(this.props.index, this.props.id, cart, extrasCart)\n            this.props.newOrderDisplay()\n            this.props.resetMenus();\n        }\n\n    \nrender(){\n    return(\n        this.props.displayCart ?\n        <div className = 'submit menu-wrapper'>\n            <div className = 'menu-header'>\n                <span className = 'cart' onClick = {()=>{this.handleAddtoCart()}}>add to cart</span>\n            </div>\n        </div>\n        :null\n    )\n}\n}\nexport default AddToCart","import React, {Component} from 'react'\nimport DrinkDrop from \"./DrinkDrop\"\nimport SizeDrop from \"./SizeDrop\"\nimport ExtraDrop from './ExtraDrop'\nimport AddToCart from './AddToCart'\n\nclass Order extends Component { \nstate = { coffees: [{style:'americano',selected:false,id:1,key:'coffees'},{style:'espresso',selected:false, id:2,key:'coffees'},{style:'cafe latte',selected:false,id:3,key:'coffees'},{style: 'cappuccino',selected:false, id:4,key:'coffees'},{style:'mocha',selected:false,id:5,key:'coffees'},{style:'hot chocolate',selected:false,id:6,key:'coffees'},{style:'Tea',selected:false,id:7,key:'coffees'},{style:'Green Tea',selected:false,id:8,key:'coffees'}],\n          sizes:[{size:'small', selected:false, id: 1,key:'sizes'},{size:'medium',selected:false, id:2,key:'sizes'},{size:'large', selected:false, id:3,key:'sizes'},{size:'extra large', selected:false, id:4, key:'sizes'}],\n          extras:[{style:'no extras', selected:false, id:1, key:'extras'},{style:'one sugar', selected:false, id:2, key:'extras'},{style:'two sugars', selected:false, id:3, key:'extras'},{style:'milk',selected:false, id:4,key:'extras'},{style:'vanilla syrup',selected:false,id:5,key:'extras'},{style:'caramel syrup',selected:false,id:6,key:'extras'}],\n          displayDrink: this.props.orderInProgress,\n          displaySize: false,\n          displayExtras: false,\n          displayCart: false,\n          }\ntoggleSelected=(id, key)=>{\n            let temp = this.state[key]\n            if (this.state.displayDrink) {\n              this.setState(prevState =>({\n                displayDrink: !prevState.displayDrink,\n                displaySize: !prevState.displaySize \n            }))}\n            if (this.state.displaySize) {\n              this.setState(prevState =>({\n                displaySize: !prevState.displaySize,\n                displayExtras: !prevState.displayExtras,\n                displayCart: !prevState.displayCart\n            }))}\n            \n            if (key !== 'extras'){temp.map((obj)=>\n            obj.selected = false)}\n            temp[id-1].selected = !temp[id-1].selected\n            this.setState({\n              [key]: temp\n            })\n            \n            \n          }\n  resetMenus = () =>{\n    if (this.state.displayCart){\n      this.setState(prevState =>({\n        displayDrink: prevState.displayDrink = false,\n        displayCart: !prevState.displayCart,\n        displayExtras:!prevState.displayExtras,      \n      }))\n    }\n  }\n  render(){  \n  const {\n    name,id,newOrderDisplay,handleCart,index,orderInProgress,currentOrder\n  }=this.props;\n  \n  return (\n    \n      <div className=\"order\">\n       \n        <div className = \"order-boxes\">\n            {orderInProgress && currentOrder === id ? <span className =\"order-name\">{name}</span> : null}\n            <DrinkDrop \n              title = \"Drink\"\n              list = {this.state.coffees}\n              toggleItem ={this.toggleSelected}\n              displayDrink ={this.state.displayDrink}\n            />\n            <SizeDrop\n            title = \"Size\"\n            list = {this.state.sizes}\n            toggleItem = {this.toggleSelected} \n            displaySize = {this.state.displaySize}\n            />\n            <ExtraDrop\n            title = \"Extras\"\n            list = {this.state.extras}\n            toggleItem = {this.toggleSelected} \n            displayExtras = {this.state.displayExtras}\n            />\n            <AddToCart\n            title = 'Add to Cart'\n            coffees = {this.state.coffees}\n            sizes = {this.state.sizes}\n            extras = {this.state.extras}\n            handleCart = {handleCart}\n            index = {index}\n            id = {id}\n            displayCart = {this.state.displayCart}\n            newOrderDisplay = {newOrderDisplay}\n            resetMenus ={this.resetMenus}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\n  export default Order;","import React, {Component} from 'react';\n\nclass AddOrder extends Component{\n    orderInput = React.createRef();\n\n    handleSubmit = (e) =>{ //callback function\n        e.preventDefault();\n        let textInput = this.orderInput.current.value;\n        let lowerCaseTextInput = textInput.toLowerCase();\n        let inputCapitalized = lowerCaseTextInput.charAt(0).toUpperCase()+lowerCaseTextInput.slice(1);\n        this.props.addOrder(inputCapitalized); \n        e.currentTarget.reset();\n    }\n    render (){\n        return(\n            this.props.displayAddOrder ?\n            <form onSubmit = {this.handleSubmit}>\n                <input \n                type = 'text'\n                ref = {this.orderInput}\n                placeholder = \"New Customer Name\"\n                />\n                <input\n                type = 'submit'\n                value = 'Start Order'\n                />\n            </form>\n            : null\n        )\n    }\n}\n\n\nexport default AddOrder;","import React from 'react'\n\nclass Cart extends React.Component{\n    render(){\n        \n        const extras = this.props.extras.join(', and ');\n        return (\n            <div className = 'cart-entries'> \n                <button className=\"remove-order\" onClick={() => this.props.removeOrder(this.props.id)}>✖</button>\n                {this.props.name} wants a {this.props.size} {this.props.drink} with {extras}\n            </div>\n        )\n    }\n}\n\nexport default Cart;","import React, { Component } from 'react';\nimport \"./App.css\"\nimport Header from './components/Header'\nimport Order from './components/Order'\nimport AddOrder from './components/AddOrder'\nimport Cart from './components/Cart'\n\n\nclass App extends Component {\n  state ={\n    noOrders: true,\n    orders: [],\n    hideCart: true,\n    displayAddOrder: true,\n    orderInProgress: false,\n    currentOrder:1\n  }\n  \n  handleCartPress = ()=>{\n    this.setState(prevState =>({\n      hideCart: !prevState.hideCart\n    }))\n  }\n\n  handleAddOrder = (name) =>{\n    let newOrder = {\n      name: name, id: this.prevOrderID +=1, drink: '', size: \"\", extras: [],\n    };\n    if(newOrder.name !== ''){\n    this.setState(prevState => ({\n      orders:prevState.orders.concat(newOrder),\n      orderInProgress: prevState.orderInProgress = true\n    }))\n    this.handleAddOrderDisplay()}\n  }\n\n  handleCart = (index,id,array1,array2) =>{\n    this.state.orders.map((customer)=>{\n      if (customer.id === id){\n        this.setState(prevState=> ({\n          drink: prevState.orders[index].drink = (array1[0]),\n          size: prevState.orders[index].size = (array1[1]),\n          extras: prevState.orders[index].extras = (array2),\n          noOrders: prevState.noOrders = false,\n          currentOrder: prevState.currentOrder += 1,\n          randName:\"\"\n        }))\n      }return customer})\n      this.handleRandName();\n      console.log(this.state.orders)\n      }\n\n  handleRandName =() =>{\n    let names =[];\n    this.state.orders.map((customer)=>\n    names.push(customer.name))\n    let randIndex = Math.floor(Math.random()*names.length)\n    console.log(randIndex)\n    let randName = names[randIndex];\n    this.setState(prevState =>({\n      randName: prevState.randName =randName\n    }))\n  }\n  handleAddOrderDisplay =()=>{\n    this.setState(prevState => ({\n      displayAddOrder: !prevState.displayAddOrder,\n      orderInProgress: prevState.displayAddOrder\n      \n    }))\n  }\n  handleRemoveOrder = (id) => {\n    this.setState( prevState => {\n      return {\n        orders: prevState.orders.filter(p => p.id !== id)\n      };\n    })\n    if (this.state.orders.length === 1){\n      this.setState( prevState => {\n        return{\n          noOrders: !prevState.noOrders\n        }\n      })\n    }\n  }\n  prevOrderID = 0;\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header \n          randName = {this.state.randName}\n          handleRandName = {this.handleRandName}\n          noOrders = {this.state.noOrders}\n          cartPress = {this.handleCartPress}\n          hideCart = {this.state.hideCart}\n          orderInProgress = {this.state.orderInProgress}\n        />\n       {this.state.hideCart ?\n        <div>\n       {this.state.orders.map((order,index) =>\n          <Order \n            name={order.name}\n            id={order.id}\n            key={order.id.toString()}\n            index = { index } \n            toggleSelected = {this.toggleSelected}\n            removeOrder = {this.handleRemoveOrder}\n            handleCart = {this.handleCart}\n            newOrderDisplay = {this.handleAddOrderDisplay}\n            orderInProgress = {this.state.orderInProgress}\n            currentOrder = {this.state.currentOrder}\n          />\n          )}\n          <AddOrder\n            displayAddOrder = {this.state.displayAddOrder}\n            addOrder = {this.handleAddOrder}\n          />\n          </div>\n           : \n          this.state.orders.map((order,index) =>\n          <Cart \n            name={order.name}\n            id={order.id}\n            key={order.id.toString()}\n            index = { index } \n            drink = {order.drink}\n            size = {order.size}\n            extras = {order.extras}\n            displayCart = {this.state.displayCart}\n            orders = {this.state.orders}\n            removeOrder = {this.handleRemoveOrder}\n          />)}\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}